language: generic
sudo: required
services:
  - docker # Travis will automatically install docker so that it is available to us

before_install:
  - docker build -t davidkuda/docker-react -f Dockerfile.dev .

script:
# Travis CI expects return code 0. If other code is returned, Travis CI will assume that the test suite failed (broken code).
  - docker run -e CI=true davidkuda/docker-react npm run test

deploy:
  provider: elasticbeanstalk # Travis CI will already do a lot of things if we select elasticbeanstalk as provider
  region: us-east-1 # Same as specified in aws
  app: docker-react # Same as specified in elasticbeanstalk
  env: Dockerreact-env # Environment Name in elastic beanstalk
  bucket_name: elasticbeanstalk-us-east-1-483687211328 # Travis will take all the files in the repo, zip them, and put them into an s3 bucket. Elastic Beanstalk automatically created a bucket with the creation of an (Elastic Beanstalk) Application.
  bucket_path: src # object path inside the bucket
  on:
    branch: main
access_key_id: $AWS_ACCESS_KEY_ID
secret_access_key: $AWS_SECRET_ACCESS_KEY